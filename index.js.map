{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const API_KEY = '46142789-99b5e0e53b7f0f17aff330ecb';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport async function fetchImages(query, page = 1) {\nconst response = await fetch(`${BASE_URL}?key=${API_KEY}&q=${query}&image_type=photo&orientation=horizontal&safesearch=true&page=${page}&per_page=16`);\nif (!response.ok) throw new Error('Failed to fetch data');\nreturn await response.json();\n}","export function renderImages(images) {\nconst gallery = document.getElementById('gallery');\nconst markup = images.map(image => `\n    <a href=\"${image.largeImageURL}\" class=\"gallery-item\">\n        <div class=\"wrapper\">\n        <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" loading=\"lazy\" />\n        </div>\n        <ul class=\"info\">\n            <li>Likes: ${image.likes}</li>\n            <li>Views: ${image.views}</li>\n            <li>Comments: ${image.comments}</li>\n            <li>Downloads: ${image.downloads}</li>\n        </ul>\n    </a>\n`).join('');\ngallery.innerHTML = markup;\n}","import { fetchImages }  from './js/pixabay-api'; \nimport { renderImages }  from './js/render-functions';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.getElementById('search-form');\nconst loader = document.getElementById('loader');\nconst galleryElement = document.getElementById('gallery'); \nlet gallery = new SimpleLightbox('.gallery-item');\n\nform.addEventListener('submit', async (e) => {\ne.preventDefault();\n\nconst query = e.target.elements.searchQuery.value.trim();\n\ngalleryElement.innerHTML = '';\n\nif (!query) {\n    iziToast.warning({ message: 'Sorry, there are no images matching your search query. Please try again!' });\n    return;\n}\n\ntry {\nloader.classList.remove('hidden');\nconst data = await fetchImages(query);\n\nif (data.hits.length === 0) {\n    iziToast.error({ message: 'Sorry, there are no images matching your search query. Please try again!' });\n        return;\n    }\n\n    renderImages(data.hits);\n    gallery.refresh();\n    } catch (error) {\n        iziToast.error({ message: error.message });\n    } finally {\n        loader.classList.add('hidden');\n    }\n});"],"names":["API_KEY","BASE_URL","fetchImages","query","page","response","renderImages","images","gallery","markup","image","form","loader","galleryElement","SimpleLightbox","e","iziToast","data","error"],"mappings":"wvBAAA,MAAMA,EAAU,qCACVC,EAAW,2BAEV,eAAeC,EAAYC,EAAOC,EAAO,EAAG,CACnD,MAAMC,EAAW,MAAM,MAAM,GAAGJ,CAAQ,QAAQD,CAAO,MAAMG,CAAK,iEAAiEC,CAAI,cAAc,EACrJ,GAAI,CAACC,EAAS,GAAI,MAAM,IAAI,MAAM,sBAAsB,EACxD,OAAO,MAAMA,EAAS,MACtB,CCPO,SAASC,EAAaC,EAAQ,CACrC,MAAMC,EAAU,SAAS,eAAe,SAAS,EAC3CC,EAASF,EAAO,IAAIG,GAAS;AAAA,eACpBA,EAAM,aAAa;AAAA;AAAA,oBAEdA,EAAM,YAAY,UAAUA,EAAM,IAAI;AAAA;AAAA;AAAA,yBAGjCA,EAAM,KAAK;AAAA,yBACXA,EAAM,KAAK;AAAA,4BACRA,EAAM,QAAQ;AAAA,6BACbA,EAAM,SAAS;AAAA;AAAA;AAAA,CAG3C,EAAE,KAAK,EAAE,EACVF,EAAQ,UAAYC,CACpB,CCTA,MAAME,EAAO,SAAS,eAAe,aAAa,EAC5CC,EAAS,SAAS,eAAe,QAAQ,EACzCC,EAAiB,SAAS,eAAe,SAAS,EACxD,IAAIL,EAAU,IAAIM,EAAe,eAAe,EAEhDH,EAAK,iBAAiB,SAAU,MAAOI,GAAM,CAC7CA,EAAE,eAAc,EAEhB,MAAMZ,EAAQY,EAAE,OAAO,SAAS,YAAY,MAAM,OAIlD,GAFAF,EAAe,UAAY,GAEvB,CAACV,EAAO,CACRa,EAAS,QAAQ,CAAE,QAAS,0EAA4E,CAAA,EACxG,MACJ,CAEA,GAAI,CACJJ,EAAO,UAAU,OAAO,QAAQ,EAChC,MAAMK,EAAO,MAAMf,EAAYC,CAAK,EAEpC,GAAIc,EAAK,KAAK,SAAW,EAAG,CACxBD,EAAS,MAAM,CAAE,QAAS,0EAA4E,CAAA,EAClG,MACH,CAEDV,EAAaW,EAAK,IAAI,EACtBT,EAAQ,QAAO,CACd,OAAQU,EAAO,CACZF,EAAS,MAAM,CAAE,QAASE,EAAM,OAAS,CAAA,CACjD,QAAc,CACNN,EAAO,UAAU,IAAI,QAAQ,CAChC,CACL,CAAC"}